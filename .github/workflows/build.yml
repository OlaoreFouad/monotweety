name: Build
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SECRETS: ${{ secrets.SECRETS }}
      RELEASE_JKS: ${{ secrets.RELEASE_JKS }}
      GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Cache gradle dir
        id: cache-gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-${{ hashFiles('**/build.gradle.kts') }}-v1

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Prepare secrets
        run: echo $SECRETS | base64 -d > ./secret.properties

      - name: Prepare jks
        run: echo $RELEASE_JKS | base64 -d > ./monotweety.jks

      - name: Prepare google-services.json
        run: echo $GOOGLE_SERVICES_JSON | base64 -d > ./app/google-services.json

      - name: Run build & test
        run: ./gradlew testDebugUnitTest assembleDebug

      - name: Slack Notification
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: Build successfully finished
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Commit Message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  }
                ]
              }
            ]

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"