// Top-level build file where you can add configuration options common to all sub-projects/modules.
// `./gradlew build -Dscan` to check & upload result
apply plugin: "com.gradle.build-scan"
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext.kotlin_version = '1.2.60'
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
//    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-beta05'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath 'com.google.gms:google-services:4.0.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.3'
        classpath 'com.gradle:build-scan-plugin:1.15.1'
        classpath 'org.jacoco:org.jacoco.core:0.8.1'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

wrapper {
    gradleVersion = '4.8.1'
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}
