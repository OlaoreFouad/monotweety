apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'io.fabric'

apply from: rootProject.file("gradle/jacoco.gradle")

def getSecretProperty(name) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('secret.properties').newDataInputStream())

    return properties.getProperty(name.toString())
}

def FABRIC_API_KEY = getSecretProperty('fabric.api.key')
def TWITTER_API_KEY = "\"${getSecretProperty('twitter.api.key')}\""
def TWITTER_API_SECRET = "\"${getSecretProperty('twitter.api.secret')}\""

android {
    compileSdkVersion 28

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword 'android'
            keyPassword 'android'
        }
        release {
            storeFile file("../${getSecretProperty("keystoreFile")}")
            storePassword getSecretProperty("keystorePassword")
            keyAlias getSecretProperty("keyAlias")
            keyPassword getSecretProperty("keyPassword")
        }
    }

    defaultConfig {
        applicationId "net.yslibrary.monotweety"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 46
        versionName "1.7.0-beta1"

        buildConfigField 'String', 'TWITTER_API_KEY', TWITTER_API_KEY
        buildConfigField 'String', 'TWITTER_API_SECRET', TWITTER_API_SECRET

        manifestPlaceholders = [fabricApiKey: FABRIC_API_KEY]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.debug
            multiDexEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dexOptions {
        jumboMode true
    }

    lintOptions {
        lintConfig rootProject.file('gradle/lint.xml')
        abortOnError false
        textReport true
        textOutput 'stdout'
//    xmlReport true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // rename release apk
    applicationVariants.all { variant ->
        if (variant.buildType.name.equals("release")) {
            variant.outputs.each { output ->
                if (output?.outputFileName?.endsWith(".apk")) {
                    final version = "v${defaultConfig.versionName}"
                    final name = "${["monotweety", variant.baseName, version].join("-")}.apk"
                    output.outputFileName = name
                }
            }
        }
        [variant.compileConfiguration,
         variant.runtimeConfiguration,
         variant.annotationProcessorConfiguration,
         variant.testVariant?.compileConfiguration,
         variant.testVariant?.runtimeConfiguration,
         variant.testVariant?.annotationProcessorConfiguration,
         variant.unitTestVariant?.compileConfiguration,
         variant.unitTestVariant?.runtimeConfiguration,
         variant.unitTestVariant?.annotationProcessorConfiguration].forEach { config ->
            config?.resolutionStrategy {
                force "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
            }
        }
    }
}

//kapt {
//    javacOptions {
//        // https://google.github.io/dagger/compiler-options
//        option("-Adagger.fastInit", "enabled")
//    }
//}

ext.retrofit_version = '2.4.0'
ext.androidx_version = '1.0.0-rc01'
ext.rxbinding_version = '2.1.1'
ext.conductor_version = '2.1.5'
ext.okhttp_version = '3.11.0'
ext.dagger_version = '2.17'
ext.storio_version = '3.0.0'
ext.leakcanary_version = '1.6.1'
ext.glide_version = '4.8.0-SNAPSHOT'
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    implementation "com.google.android.material:material:$androidx_version"

    implementation 'com.google.firebase:firebase-core:16.0.1'

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation 'com.twitter.twittertext:twitter-text:2.0.10'
    implementation 'com.twitter.sdk.android:twitter-core:3.3.0'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true;
    }
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    implementation "com.pushtorefresh.storio3:sqlite:$storio_version"

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation 'com.gojuno.koptional:koptional:1.6.0'
    implementation 'com.gojuno.koptional:koptional-rxjava2-extensions:1.6.0'

    implementation 'com.artemzin.rxjava:proguard-rules:1.3.3.0'

    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:$rxbinding_version"

    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'

    implementation "com.bluelinelabs:conductor:${conductor_version}"
    implementation "com.bluelinelabs:conductor-support:${conductor_version}"
    implementation "com.bluelinelabs:conductor-rxlifecycle2:${conductor_version}"

    implementation 'com.hannesdorfmann:adapterdelegates3:3.0.1'

    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'

    implementation 'net.yslibrary.licenseadapter:licenseadapter:2.1.1'

    implementation 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'

    implementation 'me.drakeet.support:toastcompat:1.1.0'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    debugImplementation 'com.facebook.stetho:stetho:1.5.0'


    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation "com.nhaarman:mockito-kotlin:1.6.0"
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation 'org.robolectric:robolectric:4.0-alpha-3'
}
repositories {
    mavenCentral()
    maven {
        name 'glide-snapshot'
        url 'http://oss.sonatype.org/content/repositories/snapshots'
    }
//  maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
}

apply plugin: 'com.google.gms.google-services'
